# 로컬 개발환경을 위한 docker-compose 파일입니다.
# 이 파일을 사용하여 필요한 모든 서비스를 실행할 수 있습니다.
# 주의: 이 파일은 로컬 개발환경을 위한 것이며, 프로덕션 환경에서는 사용하지 마십시오.
# 각 서비스에 필요한 환경 변수는 임시 데이터입니다. 프로덕션에서는 적절한 값을 설정해야 합니다.

services:
  mysql:
    image: mysql:8.0.36
    container_name: mysql
    volumes:
      - .data/mysql:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    environment:
      - TZ=Asia/Seoul
      - MYSQL_USER=minipay_user
      - MYSQL_PASSWORD=minipay_password
      - MYSQL_ROOT_PASSWORD=root_password

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    environment:
      - TZ=Asia/Seoul

  axon-server:
    image: axoniq/axonserver:latest-jdk-17
    container_name: axon-server
    ports:
      - "8024:8024"
      - "8124:8124"
    environment:
      - AXONIQ_AXONSERVER_NAME=axonserver
    volumes:
      - .data/axonserver/data:/axonserver/data
      - .data/axonserver/events:/axonserver/events
      - .data/axonserver/config:/axonserver/config

  minipay-gateway:
    image: minipay-gateway:1.0.0
    container_name: minipay-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - MINIPAY_MEMBERSHIP_URL=http://minipay-membership:8081
      - MINIPAY_BANKING_URL=http://minipay-banking:8082
      - MINIPAY_MONEY_URL=http://minipay-money:8083
      - MINIPAY_REMITTANCE_URL=http://minipay-remittance:8084
      - MINIPAY_PAYMENT_URL=http://minipay-payment:8085
      - MINIPAY_QUERY_URL=http://minipay-query:8086

  minipay-membership:
    image: minipay-membership:1.0.0
    container_name: minipay-membership
    ports:
      - "8081:8081"
    depends_on:
      - mysql
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/membership?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=minipay_user
      - SPRING_DATASOURCE_PASSWORD=minipay_password
      - KAFKA_CLUSTER_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19092,kafka3:19092
      - JWT_SECRET=4NF9XQVvKsdU6BME1uQR7pYxMdd5MZA6R8eBDQpKlvE

  minipay-banking:
    image: minipay-banking:1.0.0
    container_name: minipay-banking
    ports:
      - "8082:8082"
    depends_on:
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/banking?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=minipay_user
      - SPRING_DATASOURCE_PASSWORD=minipay_password
      - KAFKA_CLUSTER_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19092,kafka3:19092
      - MINIPAY_MEMBERSHIP_URL=http://minipay-membership:8081

  minipay-money:
    image: minipay-money:1.0.0
    container_name: minipay-money
    ports:
      - "8083:8083"
    depends_on:
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/money?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=minipay_user
      - SPRING_DATASOURCE_PASSWORD=minipay_password
      - KAFKA_CLUSTER_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19092,kafka3:19092
      - MINIPAY_MEMBERSHIP_URL=http://minipay-membership:8081
      - MINIPAY_BANKING_URL=http://minipay-banking:8082

  minipay-remittance:
    image: minipay-remittance:1.0.0
    container_name: minipay-remittance
    ports:
      - "8084:8084"
    depends_on:
      - mysql
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/remittance?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=minipay_user
      - SPRING_DATASOURCE_PASSWORD=minipay_password
      - KAFKA_CLUSTER_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19092,kafka3:19092
      - MINIPAY_MEMBERSHIP_URL=http://minipay-membership:8081
      - MINIPAY_MONEY_URL=http://minipay-money:8083
      - MINIPAY_BANKING_URL=http://minipay-banking:8082

  minipay-payment:
    image: minipay-payment:1.0.0
    container_name: minipay-payment
    ports:
      - "8085:8085"
    depends_on:
      - mysql
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/payment?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=minipay_user
      - SPRING_DATASOURCE_PASSWORD=minipay_password
      - KAFKA_CLUSTER_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19092,kafka3:19092
      - MINIPAY_MEMBERSHIP_URL=http://minipay-membership:8081

  minipay-query:
    image: minipay-query:1.0.0
    container_name: minipay-query
    ports:
      - "8086:8086"
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/query?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=minipay_user
      - SPRING_DATASOURCE_PASSWORD=minipay_password
      - MINIPAY_MEMBERSHIP_URL=http://minipay-membership:8081
      - MINIPAY_MONEY_URL=http://minipay-money:8083
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}

  minipay-settlement:
    image: minipay-settlement:1.0.0
    container_name: minipay-settlement
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/settlement?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=minipay_user
      - SPRING_DATASOURCE_PASSWORD=minipay_password
      - MINIPAY_PAYMENT_URL=http://minipay-payment:8085
      - MINIPAY_MONEY_URL=http://minipay-money:8083
      - MINIPAY_BANKING_URL=http://minipay-banking:8082

  zookeeper:
    image: 'bitnami/zookeeper:3.9.2'
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./.data/zookeeper/data:/bitnami/zookeeper/data
      - ./.data/zookeeper/datalog:/bitnami/zookeeper/datalog
      - ./.data/zookeeper/logs:/bitnami/zookeeper/logs

  kafka1:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:19092,EXTERNAL://localhost:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka1:/bitnami/kafka/data

  kafka2:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka2
    ports:
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:19092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka2:/bitnami/kafka/data

  kafka3:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka3
    ports:
      - "9094:9094"
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka3:19092,EXTERNAL://localhost:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka3:/bitnami/kafka/data

  kafka-ui:
    image: 'provectuslabs/kafka-ui:v0.7.2'
    container_name: kafka-ui
    ports:
      - "8989:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:19092,kafka2:19092,kafka3:19092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3